# Mutating data

One of the most common data analysis techniques is to look at change over time. The most common way of comparing change over time is through percent change. The math behind calculating percent change is very simple, and you should know it off the top of your head. The easy way to remember it is:

`(new - old) / old`

Or new minus old divided by old. Your new number minus the old number, the result of which is divided by the old number. To do that in R, we can use `dplyr` and `mutate` to calculate new metrics in a new field using existing fields of data.

So first we'll import the tidyverse so we can read in our data and begin to work with it. Go ahead and do that:

```{r}
#| warning: false
#| message: false
library(tidyverse)
```

Now you'll need a common and simple dataset of total attendance at NCAA football games over the last few seasons.

```{r}
#| warning: false
#| message: false
#| results: asis
#| echo: false
library(downloadthis)
library(glue)

dllink <- download_link(
  link = "https://dwillis.github.io/sports-data-files/attendance.csv",
  button_label = "Download csv file",
  button_type = "danger",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE
)

glue("<pre><p><strong>For this walkthrough:</strong></p><p>{dllink}</p></pre>")

```

You'll import it something like this.

```{r}
attendance <- read_csv('data/attendance.csv')
```

If you want to see the first six rows -- handy to take a peek at your data -- you can use the function `head`.

```{r}
head(attendance)
```

What's one thing you notice about the data that might make year-over-year comparisons more complex?

**Answer** Some schools get multiple rows, because of a conference change, and a bunch of schools didn't take attendance data in 2020. Also not every conference change is accounted for like Texas or Cal.

The code to calculate percent change is pretty simple. Remember, with `summarize`, we used `n()` to count things. With `mutate`, we use very similar syntax to calculate a new value using other values in our dataset. So in this case, we're trying to do (new-old)/old, but we're doing it with fields. If we look at what we got when we did `head`, you'll see there's \`2024\` as the new data, and we'll use \`2023\` as the old data. So we're looking at one year. Then, to help us, we'll use arrange again to sort it, so we get the fastest growing school over one year.

```{r}
attendance |> mutate(
  change = (`2024` - `2023`)/`2023`
) 
```
What do we see right away? Do those numbers look like we expect them to? No. They're a decimal expressed as a percentage. So let's fix that by multiplying by 100. 

```{r}
attendance |> mutate(
  change = ((`2024` - `2023`)/`2023`)*100
) 
```
Now, does this ordering do anything for us? No. Let's fix that with arrange. 

```{r}
attendance |> mutate(
  change = ((`2024` - `2023`)/`2023`)*100
) |> arrange(desc(change))
```

Who had the most growth in 2024 compared to the year before? What could account for that change? And what team(s) are the most interesting here?

**Answer** SMU led the country in attendance growth. This could be explained by the fact that they entered a P-4 conference and had a fantastic regular season. Colorado State is interesting, because I'm not aware of them having a particularly good year or any major changes.

## Back to women's soccer

Let's turn back to the women's soccer match data from this season.

Import it like this:

```{r}
matches_2025 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2025.csv")
```

Previously we calculated totals for shots attempted and shots on goal for each time. Now let's do shots on goal and goals, using group_by() and summarize(), and then we'll use mutate to add a percentage to that and see what stands out.

```{r}
matches_2025 |> 
  group_by(team) |> 
  summarise(
    total_on_goal = sum(so_g),
    total_goals = sum(goals)
  ) |> 
  mutate(percent = total_goals/total_on_goal * 100) |> 
  arrange(desc(percent)) |> 
  filter(total_on_goal > 39)
```

What stands out to you here? Describe that below. Would you narrow down the results to certain teams based on the data? If so, do that in the code and explain why you did it below. Finally, what's the most interesting result to you that could be a story?

**Answer** One thing that stands out is Maryland's recent opponent James Madison and next opponent Penn State both being in the top 10. I think this somewhat reframes their loss as to potentially a better team than I would assume JMU to be. I'd like to narrow down to Big Ten teams, but the data is not divided by conference so I decided to instead filter teams with a higher sample size of total shots on target. This seemed to give me more teams that Maryland should be closer to competing with. 
Assuming I was covering the Terps I think I would go with an analysis story ahead of conference play assesing where they stack up so far vs the Big Ten in generating chances (shots, shots on goal, shots on goal percentage) and then converting those chances into goals.  